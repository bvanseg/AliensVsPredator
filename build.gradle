buildscript {
    repositories {
    	mavenCentral()
        maven { url = "https://maven.minecraftforge.net/" }
        maven {
            url = "https://oss.sonatype.org/content/groups/public"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'

configurations {
    deployerJars
}

repositories {
    maven {
        name = "aliensvspredator"
        url = "http://maven.aliensvspredator.org/"
    }
}

version = "${System.env.PROJECT_VERSION}"
group = "org.avp"
archivesBaseName = "aliensvspredator"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    maven {
        name = "aliensvspredator"
        url = "http://maven.aliensvspredator.org/"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation "com.asx:mdxlib:${mdxversion}:deobf"
}

def manifestAttributes = [
        "Specification-Title": "AliensVsPredator",
        "Specification-Vendor": "Arisux",
        "Specification-Version": "1", // We are version 1 of ourselves
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor" :"Arisux",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]

jar {
    archiveName = "${archivesBaseName}-${version}.jar"
    manifest {
        attributes(manifestAttributes)
    }
}

task srcJar(type: Jar) {
    from sourceSets.main.output
    archiveName = "${archivesBaseName}-${version}-sources.jar"
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    archiveName = "${archivesBaseName}-${version}-deobf.jar"
    classifier = 'deobf'
}

artifacts {
    archives srcJar, deobfJar
}

// This is necessary for intellij IDEA to load resources correctly! Do not touch!
sourceSets {
    main { output.resourcesDir = output.classesDir }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
//jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')


curseforge {
    apiKey = curseforge_api_key

    project {
        id = curseforge_id
        changelog = ''
        releaseType = hasProperty('curseforge_release_type') ? curseforge_release_type : 'release'

        mainArtifact jar

        relations {
            requiredLibrary 'mdxlib'
        }
    }
}

processResources {
    inputs.property "version", version
    inputs.property "mcversion", minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': version, 'mcversion': minecraft_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("publishToMaven", dependsOn:"build") {
    description = "Uploads the artifacts generated during the build process to the aliensvspredator maven repository"

    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "ftp://maven.aliensvspredator.org") {
                authentication(userName: mavenUsername, password: mavenPassword)
            }

            pom.project {
                properties {
                    forgeVersion = forge_version
                    mcVersion = minecraft_version
                }
            }
        }
    }
}